#!/bin/bash

# USAGE
#   dev-setup
# OPTIONS
#   --alias-file alias_file
#     Add convenient aliases to the file at this path
# EXAMPLES
#   dev-setup --alias-file ~/.zshrc

set -e

dc="docker compose -f compose.yaml -f compose.override.dev.yaml"
drailsa="$dc exec api bin/rails"
aliases="# Added by https://github.com/High5Apps/organize-backend
alias dc='$dc'
alias drailsa='dc exec api bin/rails'
alias drails='drailsa'
alias drailss='dc exec site bin/rails'
"

alias_file=$2
added_aliases=false
if ! [ -z "$alias_file" ]; then
  if [ -e $alias_file ] && grep -q "dc=" $alias_file; then
    echo "Aliases are already present in $alias_file"
  else
    echo "Adding the following aliases to $alias_file"
    echo "$aliases" | tee -a $alias_file
    added_aliases=true
  fi
fi

updated_dot_env=false
dot_env_example=.env.example
dot_env=.env
if [ -e $dot_env ] && ! grep -q "example-password-odp" $dot_env; then
  echo ".env file already contains secrets"
else
  echo "Creating .env file with example values..."
  cp $dot_env_example $dot_env

  echo "Creating fake secrets..."
  $dc build

  # ORGANIZE_DATABASE_PASSWORD has a max length of 99 characters
  organize_database_password=$($dc run --no-deps api rails secret | head -c 99)

  # RAILS_MASTER_KEY_API must be 32 characters of hex
  rails_master_key_api=$($dc run --no-deps api rails secret | head -c 32)

  # RAILS_MASTER_KEY_API_DEV must be 32 characters of hex
  rails_master_key_api_dev=$($dc run --no-deps api rails secret | head -c 32)

  # RAILS_MASTER_KEY_SITE must be 32 characters of hex
  rails_master_key_site=$($dc run --no-deps site rails secret | head -c 32)

  echo "Adding fake secrets to .env..."
  sed -i '' "s/example-password-odp/$organize_database_password/" $dot_env

  # The rmkad substitution must occur before the rmka substitution, since they
  # share a prefix. Otherwise the rmka substitution would happen on both lines
  sed -i '' "s/example-password-rmkad/$rails_master_key_api_dev/" $dot_env
  sed -i '' "s/example-password-rmka/$rails_master_key_api/" $dot_env

  sed -i '' "s/example-password-rmks/$rails_master_key_site/" $dot_env

  updated_dot_env=true
fi

db_dir=tmp/db
if ! [ -e $db_dir ] || $updated_dot_env; then
  echo 'Initializing the database...'
  rm -rf $db_dir
  $dc build
  $dc up api --detach

  until >/dev/null 2>/dev/null $drailsa db:reset
  do
    echo 'Waiting 5s for database to initialize...'
    sleep 5
  done

  echo 'Database initialized'
  $dc down
else
  echo 'No need to initialize the database, since .env was unchanged'
fi

# Note this also happens in bin/bootstrap
echo 'Installing the loki-docker-driver pulgin'
docker plugin install grafana/loki-docker-driver:3.3.2-arm64 --alias loki --grant-all-permissions
parent_dir_path=$(dirname "$0")
cp $parent_dir_path/../daemon.json ~/.docker/daemon.json
echo 'Restart Docker Desktop to begin logging to Loki'

echo 'Testing project...'
$dc up --detach
echo 'Waiting 5s for services to settle...'
echo '(Increase this duration if the tests fail due to connection issues.)'
sleep 5
$drailsa test
$drailss test
$dc down

echo 'Development setup succeeded'

if $added_aliases; then
  echo "Don't forget to activate the new aliases with: source $alias_file"
fi
