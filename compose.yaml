services:
  api:
    build:
      context: api
      target: prod
    depends_on:
      - db
    environment:
      ORGANIZE_DATABASE_PASSWORD: ${ORGANIZE_DATABASE_PASSWORD:?err}
      ORGANIZE_DATABASE_USER: postgres
      ORGANIZE_DATABASE_HOST: db
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY_API:?err}
    image: localhost:5001/organize-api
    ports:
      - "127.0.0.1:3000:3000"
    restart: always
  certs:
    build:
      context: certs
    image: localhost:5001/organize-certs
    restart: always
    volumes:
      - cert-www:/var/www/certbot/:rw
      - cert-conf:/etc/letsencrypt/:rw
  db:
    environment:
      PGDATA: /var/lib/postgresql/17/data
      POSTGRES_PASSWORD: ${ORGANIZE_DATABASE_PASSWORD:?err}
    image: postgres:17.0
    ports:
      - "127.0.0.1:5432:5432"
    restart: always
    volumes:
      - db-data:/var/lib/postgresql:rw
  monitor:
    build:
      context: monitor
    image: localhost:5001/organize-monitor
    ports:
      - "127.0.0.1:9090:9090"
    restart: always
    volumes:
      - monitor-data:/prometheus:rw
  monitor-dash:
    build:
      context: monitor-dash
    image: localhost:5001/organize-monitor-dash
    ports:
      - "127.0.0.1:9000:3000"
    restart: always
    volumes:
      - monitor-dash-data:/var/lib/grafana
  monitor-db:
    command: '--no-collector.stat_bgwriter'
    depends_on:
      - db
    environment:
      DATA_SOURCE_PASS: ${ORGANIZE_DATABASE_PASSWORD:?err}
      DATA_SOURCE_URI: db:5432/organize_production?sslmode=disable
      DATA_SOURCE_USER: postgres
    image: prometheuscommunity/postgres-exporter:v0.15.0
    ports:
      - "127.0.0.1:9187:9187"
  site:
    build:
      context: site
      target: prod
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY_SITE:?err}
    image: localhost:5001/organize-site
    ports:
      - "127.0.0.1:3001:3000"
    restart: always
    volumes:
      - site-storage:/rails/storage
  web:
    build:
      context: web
    depends_on:
      - api
      - certs
      - site
    image: localhost:5001/organize-web
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:9991:9991"
    restart: always
    volumes:
      - cert-www:/var/www/certbot/:ro
      - cert-conf:/etc/nginx/ssl/:ro

volumes:
  cert-conf:
  cert-www:
  db-data:
  monitor-data:
  monitor-dash-data:
  site-storage:
